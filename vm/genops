#!/bin/gawk -f
BEGIN {
    op = 0;
    offset = 0;
    gofile = "ops_gen.go";
    asmfile = "ops_gen_amd64.s";
    asmhdr = "ops_mask.h"

    print("package vm\n") > gofile;
    print("\n// Code generated automatically; DO NOT EDIT\n") > gofile;
    print("const (\n") > gofile;

    print("#include \"textflag.h\"\n") > asmfile;
    print("\n// Code generated automatically; DO NOT EDIT\n") > asmfile;
}

/^TEXT bc/{
    match($2, /bc(.*)\(SB\)/, opname);
    printf("\top%s bcop = %d\n", opname[1], op) > gofile;
    printf("DATA opaddrs+0x%03x(SB)/8, $%s\n", offset, opname[0]) > asmfile;
    op++;
    offset += 8;
}

END {
    rnd=1;
    while(rnd < op) {
        rnd *= 2;
    }
    rnd--;

    printf("\t_maxbcop = %d\n", op) > gofile;
    print ")\n" > gofile;

    # generate a power-of-2-sized opaddr table
    # so that we can cheaply ensure that every
    # indirect through the table does not dereference
    # an arbitrary address; invalid instructions should trap immediately
    while(op <= rnd) {
        printf("DATA opaddrs+0x%03x(SB)/8, $bctrap(SB)\n", offset) > asmfile;
        offset += 8;
        op++;
    }
    printf("// Code generated by genops; DO NOT EDIT\n") > asmhdr;
    printf("#define OPMASK 0x%03x\n", rnd) > asmhdr;

    printf("GLOBL opaddrs(SB), RODATA|NOPTR, $0x%03x\n", offset) > asmfile;
}
